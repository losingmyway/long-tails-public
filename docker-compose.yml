version: "3.9"

services:
  nextjs:
    container_name: hasura_test_nextjs
    ports:
      - 3000:3000
    build: ./frontend
    volumes:
      - ./frontend/:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/.next
    env_file:
      - ./frontend/.env.local
  api:
    container_name: hasura_test_api
    ports:
      - 3333:3333
    build: ./api
    volumes:
      - ./api/:/usr/src/api
      - /usr/src/api/node_modules
    env_file:
      - ./api/.env
  postgres:
    container_name: hasura_test_postgres
    image: postgres:12
    restart: always
    volumes:
      - hasura_test_postgres_db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  graphql-engine:
    container_name: hasura_test_graphql_engine
    image: hasura/graphql-engine:v2.1.1
    ports:
      - "8080:8080"
    depends_on:
      - "postgres"
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
volumes:
  hasura_test_postgres_db_data: